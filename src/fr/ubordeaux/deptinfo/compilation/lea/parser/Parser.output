Terminals unused in grammar

    "comparable"
    "equivalent"


State 270 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: imports declarations
    2  | error $end

    3 imports: %empty
    4        | imports import

    5 import: "import" LITTERAL_STRING

    6 declarations: declarations declaration
    7             | declaration

    8 declaration: "class" IDENTIFIER implements extends '{' classDefinition '}'
    9            | "class" "main" '{' classDefinition '}'
   10            | "interface" IDENTIFIER extends_public '{' interfaceDefinition '}'

   11 implements: %empty
   12           | "implements" classNames

   13 extends: %empty
   14        | "extends" determiner className

   15 extends_public: %empty
   16               | "extends" className

   17 classNames: classNames ',' className
   18           | className

   19 className: IDENTIFIER
   20          | IDENTIFIER '<' classNames '>'

   21 classDefinition: %empty
   22                | classDefinitionContent classDefinition

   23 classDefinitionContent: typeDefinition
   24                       | constDefinition
   25                       | attributeDefinition
   26                       | methodDefinition

   27 typeDefinition: "type" IDENTIFIER ":=" typeExpr

   28 constDefinition: "const" IDENTIFIER ":=" constExpr

   29 attributeDefinition: determiner IDENTIFIER ':' typeExpr ';'

   30 methodDefinition: "main" '(' argsDefinition ')' block

   31 $@1: %empty

   32 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@1 block

   33 $@2: %empty

   34 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@2 ';'

   35 $@3: %empty

   36 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block

   37 $@4: %empty

   38 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'

   39 $@5: %empty

   40 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block

   41 $@6: %empty

   42 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'

   43 $@7: %empty

   44 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block

   45 $@8: %empty

   46 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'

   47 determiner: %empty
   48           | "private"
   49           | "public"
   50           | "protected"

   51 specifier: %empty
   52          | "virtual"
   53          | "final"

   54 user_defined_operators: "&&"
   55                       | "||"
   56                       | '!'
   57                       | '<'
   58                       | "<="
   59                       | '>'
   60                       | ">="
   61                       | "=="
   62                       | "!="
   63                       | '+'
   64                       | '-'
   65                       | '*'
   66                       | '/'
   67                       | '%'
   68                       | "++"
   69                       | "--"
   70                       | '&'
   71                       | '|'
   72                       | "<<"
   73                       | ">>"
   74                       | ":="
   75                       | "+="
   76                       | "-="
   77                       | "*="
   78                       | "/="
   79                       | "%="
   80                       | "||="
   81                       | "&&="
   82                       | "&="
   83                       | "|="
   84                       | "<<="
   85                       | ">>="
   86                       | "[]"

   87 interfaceDefinition: "procedure" IDENTIFIER '(' argsDefinition ')' ';'
   88                    | "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr ';'

   89 typeExpr: "char"
   90         | "integer"
   91         | "float"
   92         | "boolean"
   93         | "string"
   94         | "enum" '<' typeNames '>'
   95         | "range" '<' typeExpr '>'
   96         | "list" '<' typeExpr '>'
   97         | "set" '<' typeExpr '>'
   98         | "map" '<' typeExpr ',' typeExpr '>'
   99         | typePtrExpr

  100 typePtrExpr: IDENTIFIER '<' typeExprs '>'
  101            | IDENTIFIER

  102 typeExprs: typeExprs ',' typeExpr
  103          | typeExpr

  104 typeNames: typeNames ',' typeName
  105          | typeName

  106 typeName: IDENTIFIER

  107 argsDefinition: argsDefinition ',' argDefinition
  108               | argDefinition

  109 argDefinition: IDENTIFIER ':' typeExpr

  110 block: '{' varDefinitions stms '}'

  111 varDefinitions: %empty
  112               | varDefinitions varDefinition

  113 varDefinition: IDENTIFIER ':' typeExpr ';'

  114 stms: stms stm
  115     | stm

  116 stm: simple_stm ';'
  117    | for_stm
  118    | "if" '(' expr ')' stm
  119    | "if" '(' expr ')' stm "else" stm
  120    | "while" '(' expr ')' stm
  121    | "do" stm "while" '(' expr ')' ';'
  122    | "for" '(' assignedVariable ':' expr ')' stm
  123    | "foreach" assignedVariable "in" expr stm
  124    | block

  125 for_stm: "for" '(' assignedVariable ';' expr ';' expr ')' block
  126        | "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | "for" error ';'
  129        | "for" error $end

  130 simple_stm: assignedVariable ":=" expr
  131           | assignedVariable "++"
  132           | assignedVariable "--"
  133           | assignedVariable "+=" expr
  134           | assignedVariable "-=" expr
  135           | assignedVariable "*=" expr
  136           | assignedVariable "/=" expr
  137           | assignedVariable "%=" expr
  138           | assignedVariable "||=" expr
  139           | assignedVariable "&&=" expr
  140           | assignedVariable "&=" expr
  141           | assignedVariable "|=" expr
  142           | assignedVariable "<<=" expr
  143           | assignedVariable ">>=" expr
  144           | methodName '(' args ')'
  145           | "readln" '(' expr ')'
  146           | "write" '(' expr ')'
  147           | "writeln" '(' expr ')'
  148           | "break"
  149           | "continue"
  150           | "return" expr

  151 assignedVariable: IDENTIFIER
  152                 | IDENTIFIER '[' args ']'
  153                 | assignedVariable '.' IDENTIFIER
  154                 | "this"

  155 methodName: IDENTIFIER
  156           | assignedVariable '.' IDENTIFIER

  157 args: args ',' expr
  158     | expr

  159 constExpr: "null"
  160          | NUMBER_INTEGER
  161          | NUMBER_FLOAT
  162          | LITTERAL_CHAR
  163          | LITTERAL_STRING
  164          | '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'

  165 expr: constExpr
  166     | assignedVariable
  167     | methodName '(' args ')'
  168     | "new" typePtrExpr '(' args_opt ')'
  169     | expr "&&" expr
  170     | expr "||" expr
  171     | '!' expr
  172     | expr '<' expr
  173     | expr "<=" expr
  174     | expr '>' expr
  175     | expr ">=" expr
  176     | expr "==" expr
  177     | expr "!=" expr
  178     | expr '+' expr
  179     | expr '-' expr
  180     | '-' expr
  181     | expr '*' expr
  182     | expr '/' expr
  183     | expr '%' expr
  184     | expr "++"
  185     | expr "--"
  186     | "++" expr
  187     | "--" expr
  188     | expr '&' expr
  189     | expr '|' expr
  190     | expr "<<" expr
  191     | expr ">>" expr
  192     | '(' expr ')'

  193 args_opt: %empty
  194         | args


Terminals, with rules where they appear

    $end (0) 0 2 129
    '!' (33) 56 171
    '%' (37) 67 183
    '&' (38) 70 188
    '(' (40) 30 32 34 36 38 40 42 44 46 87 88 118 119 120 121 122 125 126 127 144 145 146 147 167 168 192
    ')' (41) 30 32 34 36 38 40 42 44 46 87 88 118 119 120 121 122 125 126 127 144 145 146 147 167 168 192
    '*' (42) 65 181
    '+' (43) 63 178
    ',' (44) 17 98 102 104 107 157
    '-' (45) 64 179 180
    '.' (46) 153 156
    '/' (47) 66 182
    ':' (58) 29 40 42 44 46 88 109 113 122 127
    ';' (59) 29 34 38 42 46 87 88 113 116 121 125 126 127 128
    '<' (60) 20 57 94 95 96 97 98 100 172
    '>' (62) 20 59 94 95 96 97 98 100 174
    '[' (91) 152 164
    ']' (93) 152 164
    '{' (123) 8 9 10 110
    '|' (124) 71 189
    '}' (125) 8 9 10 110
    error (256) 2 128 129
    ":=" (258) 27 28 74 126 130
    "+=" (259) 75 133
    "-=" (260) 76 134
    "*=" (261) 77 135
    "/=" (262) 78 136
    "%=" (263) 79 137
    "||=" (264) 80 138
    "&&=" (265) 81 139
    "&=" (266) 82 140
    "|=" (267) 83 141
    "<<=" (268) 84 142
    ">>=" (269) 85 143
    "++" (270) 68 131 184 186
    "--" (271) 69 132 185 187
    "&&" (272) 54 169
    "||" (273) 55 170
    "<<" (274) 72 190
    ">>" (275) 73 191
    ".." (276) 164
    "==" (277) 61 176
    "<=" (278) 58 173
    ">=" (279) 60 175
    "!=" (280) 62 177
    "boolean" (281) 92
    "break" (282) 148
    "char" (283) 89
    "class" (284) 8 9
    "comparable" (285)
    "const" (286) 28
    "continue" (287) 149
    "do" (288) 121
    "else" (289) 119
    "enum" (290) 94
    "equivalent" (291)
    "extends" (292) 14 16
    "final" (293) 53
    "float" (294) 91
    "for" (295) 122 125 126 127 128 129
    "foreach" (296) 123
    "function" (297) 40 42 88
    "if" (298) 118 119
    "implements" (299) 12
    "import" (300) 5
    "in" (301) 123
    "integer" (302) 90
    "interface" (303) 10
    "list" (304) 96
    "map" (305) 98
    "main" (306) 9 30
    "new" (307) 168
    "null" (308) 159
    "operator" (309) 44 46
    "private" (310) 48
    "protected" (311) 50
    "public" (312) 49
    "procedure" (313) 36 38 87
    "range" (314) 95
    "readln" (315) 145
    "return" (316) 150
    "set" (317) 97
    "string" (318) 93
    "this" (319) 154
    "type" (320) 27
    "virtual" (321) 52
    "write" (322) 146
    "writeln" (323) 147
    "while" (324) 120 121
    IDENTIFIER <String> (325) 8 10 19 20 27 28 29 32 34 36 38 40 42 87 88 100 101 106 109 113 127 151 152 153 155 156
    LITTERAL_STRING <String> (326) 5 163
    NUMBER_INTEGER <Integer> (327) 160 164
    LITTERAL_CHAR <Integer> (328) 162
    NUMBER_FLOAT <Float> (329) 161
    WITHOUT_ELSE (330)
    DETERMINER (331)
    SPECIFIER (332)
    LEFTPLUSPLUS (333)
    LEFTMINUSMINUS (334)
    UMINUS (335)
    "[]" (336) 86


Nonterminals, with rules where they appear

    $accept (102)
        on left: 0
    S (103)
        on left: 1 2
        on right: 0
    imports (104)
        on left: 3 4
        on right: 1 4
    import (105)
        on left: 5
        on right: 4
    declarations (106)
        on left: 6 7
        on right: 1 6
    declaration (107)
        on left: 8 9 10
        on right: 6 7
    implements (108)
        on left: 11 12
        on right: 8
    extends (109)
        on left: 13 14
        on right: 8
    extends_public (110)
        on left: 15 16
        on right: 10
    classNames (111)
        on left: 17 18
        on right: 12 17 20
    className (112)
        on left: 19 20
        on right: 14 16 17 18
    classDefinition (113)
        on left: 21 22
        on right: 8 9 22
    classDefinitionContent (114)
        on left: 23 24 25 26
        on right: 22
    typeDefinition (115)
        on left: 27
        on right: 23
    constDefinition (116)
        on left: 28
        on right: 24
    attributeDefinition (117)
        on left: 29
        on right: 25
    methodDefinition (118)
        on left: 30 32 34 36 38 40 42 44 46
        on right: 26
    $@1 (119)
        on left: 31
        on right: 32
    $@2 (120)
        on left: 33
        on right: 34
    $@3 (121)
        on left: 35
        on right: 36
    $@4 (122)
        on left: 37
        on right: 38
    $@5 (123)
        on left: 39
        on right: 40
    $@6 (124)
        on left: 41
        on right: 42
    $@7 (125)
        on left: 43
        on right: 44
    $@8 (126)
        on left: 45
        on right: 46
    determiner (127)
        on left: 47 48 49 50
        on right: 14 29 32 34 36 38 40 42
    specifier (128)
        on left: 51 52 53
        on right: 36 38 40 42
    user_defined_operators <String> (129)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
        on right: 44 46
    interfaceDefinition (130)
        on left: 87 88
        on right: 10
    typeExpr <Type> (131)
        on left: 89 90 91 92 93 94 95 96 97 98 99
        on right: 27 29 40 42 44 46 88 95 96 97 98 102 103 109 113 127
    typePtrExpr <Type> (132)
        on left: 100 101
        on right: 99 168
    typeExprs <Type> (133)
        on left: 102 103
        on right: 100 102
    typeNames <Type> (134)
        on left: 104 105
        on right: 94 104
    typeName <Type> (135)
        on left: 106
        on right: 104 105
    argsDefinition <Type> (136)
        on left: 107 108
        on right: 30 32 34 36 38 40 42 44 46 87 88 107
    argDefinition <Type> (137)
        on left: 109
        on right: 107 108
    block (138)
        on left: 110
        on right: 30 32 36 40 44 124 125 126 127
    varDefinitions (139)
        on left: 111 112
        on right: 110 112
    varDefinition (140)
        on left: 113
        on right: 112
    stms (141)
        on left: 114 115
        on right: 110 114
    stm (142)
        on left: 116 117 118 119 120 121 122 123 124
        on right: 114 115 118 119 120 121 122 123
    for_stm (143)
        on left: 125 126 127 128 129
        on right: 117
    simple_stm (144)
        on left: 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150
        on right: 116
    assignedVariable <Type> (145)
        on left: 151 152 153 154
        on right: 122 123 125 126 130 131 132 133 134 135 136 137 138 139 140 141 142 143 153 156 166
    methodName <Type> (146)
        on left: 155 156
        on right: 144 167
    args <Type> (147)
        on left: 157 158
        on right: 144 152 157 167 194
    constExpr <Type> (148)
        on left: 159 160 161 162 163 164
        on right: 28 126 165
    expr <Type> (149)
        on left: 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192
        on right: 118 119 120 121 122 123 125 126 127 130 133 134 135 136 137 138 139 140 141 142 143 145 146 147 150 157 158 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192
    args_opt <Type> (150)
        on left: 193 194
        on right: 168


State 0

    0 $accept: • S $end
    1 S: • imports declarations
    2  | • error $end
    3 imports: • %empty
    4        | • imports import

    error  shift, and go to state 1

    "class"      reduce using rule 3 (imports)
    "import"     reduce using rule 3 (imports)
    "interface"  reduce using rule 3 (imports)

    S        go to state 2
    imports  go to state 3


State 1

    2 S: error • $end

    $end  shift, and go to state 4


State 2

    0 $accept: S • $end

    $end  shift, and go to state 5


State 3

    1 S: imports • declarations
    4 imports: imports • import
    5 import: • "import" LITTERAL_STRING
    6 declarations: • declarations declaration
    7             | • declaration
    8 declaration: • "class" IDENTIFIER implements extends '{' classDefinition '}'
    9            | • "class" "main" '{' classDefinition '}'
   10            | • "interface" IDENTIFIER extends_public '{' interfaceDefinition '}'

    "class"      shift, and go to state 6
    "import"     shift, and go to state 7
    "interface"  shift, and go to state 8

    import        go to state 9
    declarations  go to state 10
    declaration   go to state 11


State 4

    2 S: error $end •

    $default  reduce using rule 2 (S)


State 5

    0 $accept: S $end •

    $default  accept


State 6

    8 declaration: "class" • IDENTIFIER implements extends '{' classDefinition '}'
    9            | "class" • "main" '{' classDefinition '}'

    "main"      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13


State 7

    5 import: "import" • LITTERAL_STRING

    LITTERAL_STRING  shift, and go to state 14


State 8

   10 declaration: "interface" • IDENTIFIER extends_public '{' interfaceDefinition '}'

    IDENTIFIER  shift, and go to state 15


State 9

    4 imports: imports import •

    $default  reduce using rule 4 (imports)


State 10

    1 S: imports declarations •
    6 declarations: declarations • declaration
    8 declaration: • "class" IDENTIFIER implements extends '{' classDefinition '}'
    9            | • "class" "main" '{' classDefinition '}'
   10            | • "interface" IDENTIFIER extends_public '{' interfaceDefinition '}'

    "class"      shift, and go to state 6
    "interface"  shift, and go to state 8

    $default  reduce using rule 1 (S)

    declaration  go to state 16


State 11

    7 declarations: declaration •

    $default  reduce using rule 7 (declarations)


State 12

    9 declaration: "class" "main" • '{' classDefinition '}'

    '{'  shift, and go to state 17


State 13

    8 declaration: "class" IDENTIFIER • implements extends '{' classDefinition '}'
   11 implements: • %empty
   12           | • "implements" classNames

    "implements"  shift, and go to state 18

    $default  reduce using rule 11 (implements)

    implements  go to state 19


State 14

    5 import: "import" LITTERAL_STRING •

    $default  reduce using rule 5 (import)


State 15

   10 declaration: "interface" IDENTIFIER • extends_public '{' interfaceDefinition '}'
   15 extends_public: • %empty
   16               | • "extends" className

    "extends"  shift, and go to state 20

    $default  reduce using rule 15 (extends_public)

    extends_public  go to state 21


State 16

    6 declarations: declarations declaration •

    $default  reduce using rule 6 (declarations)


State 17

    9 declaration: "class" "main" '{' • classDefinition '}'
   21 classDefinition: • %empty
   22                | • classDefinitionContent classDefinition
   23 classDefinitionContent: • typeDefinition
   24                       | • constDefinition
   25                       | • attributeDefinition
   26                       | • methodDefinition
   27 typeDefinition: • "type" IDENTIFIER ":=" typeExpr
   28 constDefinition: • "const" IDENTIFIER ":=" constExpr
   29 attributeDefinition: • determiner IDENTIFIER ':' typeExpr ';'
   30 methodDefinition: • "main" '(' argsDefinition ')' block
   32                 | • determiner IDENTIFIER '(' argsDefinition ')' $@1 block
   34                 | • determiner IDENTIFIER '(' argsDefinition ')' $@2 ';'
   36                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   38                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   40                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   42                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'
   44                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block
   46                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'
   47 determiner: • %empty
   48           | • "private"
   49           | • "public"
   50           | • "protected"

    "const"      shift, and go to state 22
    "main"       shift, and go to state 23
    "operator"   shift, and go to state 24
    "private"    shift, and go to state 25
    "protected"  shift, and go to state 26
    "public"     shift, and go to state 27
    "type"       shift, and go to state 28

    '}'       reduce using rule 21 (classDefinition)
    $default  reduce using rule 47 (determiner)

    classDefinition         go to state 29
    classDefinitionContent  go to state 30
    typeDefinition          go to state 31
    constDefinition         go to state 32
    attributeDefinition     go to state 33
    methodDefinition        go to state 34
    determiner              go to state 35


State 18

   12 implements: "implements" • classNames
   17 classNames: • classNames ',' className
   18           | • className
   19 className: • IDENTIFIER
   20          | • IDENTIFIER '<' classNames '>'

    IDENTIFIER  shift, and go to state 36

    classNames  go to state 37
    className   go to state 38


State 19

    8 declaration: "class" IDENTIFIER implements • extends '{' classDefinition '}'
   13 extends: • %empty
   14        | • "extends" determiner className

    "extends"  shift, and go to state 39

    $default  reduce using rule 13 (extends)

    extends  go to state 40


State 20

   16 extends_public: "extends" • className
   19 className: • IDENTIFIER
   20          | • IDENTIFIER '<' classNames '>'

    IDENTIFIER  shift, and go to state 36

    className  go to state 41


State 21

   10 declaration: "interface" IDENTIFIER extends_public • '{' interfaceDefinition '}'

    '{'  shift, and go to state 42


State 22

   28 constDefinition: "const" • IDENTIFIER ":=" constExpr

    IDENTIFIER  shift, and go to state 43


State 23

   30 methodDefinition: "main" • '(' argsDefinition ')' block

    '('  shift, and go to state 44


State 24

   44 methodDefinition: "operator" • user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block
   46                 | "operator" • user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'
   54 user_defined_operators: • "&&"
   55                       | • "||"
   56                       | • '!'
   57                       | • '<'
   58                       | • "<="
   59                       | • '>'
   60                       | • ">="
   61                       | • "=="
   62                       | • "!="
   63                       | • '+'
   64                       | • '-'
   65                       | • '*'
   66                       | • '/'
   67                       | • '%'
   68                       | • "++"
   69                       | • "--"
   70                       | • '&'
   71                       | • '|'
   72                       | • "<<"
   73                       | • ">>"
   74                       | • ":="
   75                       | • "+="
   76                       | • "-="
   77                       | • "*="
   78                       | • "/="
   79                       | • "%="
   80                       | • "||="
   81                       | • "&&="
   82                       | • "&="
   83                       | • "|="
   84                       | • "<<="
   85                       | • ">>="
   86                       | • "[]"

    ":="   shift, and go to state 45
    "+="   shift, and go to state 46
    "-="   shift, and go to state 47
    "*="   shift, and go to state 48
    "/="   shift, and go to state 49
    "%="   shift, and go to state 50
    "||="  shift, and go to state 51
    "&&="  shift, and go to state 52
    "&="   shift, and go to state 53
    "|="   shift, and go to state 54
    "<<="  shift, and go to state 55
    ">>="  shift, and go to state 56
    "++"   shift, and go to state 57
    "--"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "||"   shift, and go to state 60
    "<<"   shift, and go to state 61
    ">>"   shift, and go to state 62
    "=="   shift, and go to state 63
    "<="   shift, and go to state 64
    ">="   shift, and go to state 65
    "!="   shift, and go to state 66
    '!'    shift, and go to state 67
    '<'    shift, and go to state 68
    '>'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '*'    shift, and go to state 72
    '/'    shift, and go to state 73
    '%'    shift, and go to state 74
    '|'    shift, and go to state 75
    '&'    shift, and go to state 76
    "[]"   shift, and go to state 77

    user_defined_operators  go to state 78


State 25

   48 determiner: "private" •

    $default  reduce using rule 48 (determiner)


State 26

   50 determiner: "protected" •

    $default  reduce using rule 50 (determiner)


State 27

   49 determiner: "public" •

    $default  reduce using rule 49 (determiner)


State 28

   27 typeDefinition: "type" • IDENTIFIER ":=" typeExpr

    IDENTIFIER  shift, and go to state 79


State 29

    9 declaration: "class" "main" '{' classDefinition • '}'

    '}'  shift, and go to state 80


State 30

   21 classDefinition: • %empty
   22                | • classDefinitionContent classDefinition
   22                | classDefinitionContent • classDefinition
   23 classDefinitionContent: • typeDefinition
   24                       | • constDefinition
   25                       | • attributeDefinition
   26                       | • methodDefinition
   27 typeDefinition: • "type" IDENTIFIER ":=" typeExpr
   28 constDefinition: • "const" IDENTIFIER ":=" constExpr
   29 attributeDefinition: • determiner IDENTIFIER ':' typeExpr ';'
   30 methodDefinition: • "main" '(' argsDefinition ')' block
   32                 | • determiner IDENTIFIER '(' argsDefinition ')' $@1 block
   34                 | • determiner IDENTIFIER '(' argsDefinition ')' $@2 ';'
   36                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   38                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   40                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   42                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'
   44                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block
   46                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'
   47 determiner: • %empty
   48           | • "private"
   49           | • "public"
   50           | • "protected"

    "const"      shift, and go to state 22
    "main"       shift, and go to state 23
    "operator"   shift, and go to state 24
    "private"    shift, and go to state 25
    "protected"  shift, and go to state 26
    "public"     shift, and go to state 27
    "type"       shift, and go to state 28

    '}'       reduce using rule 21 (classDefinition)
    $default  reduce using rule 47 (determiner)

    classDefinition         go to state 81
    classDefinitionContent  go to state 30
    typeDefinition          go to state 31
    constDefinition         go to state 32
    attributeDefinition     go to state 33
    methodDefinition        go to state 34
    determiner              go to state 35


State 31

   23 classDefinitionContent: typeDefinition •

    $default  reduce using rule 23 (classDefinitionContent)


State 32

   24 classDefinitionContent: constDefinition •

    $default  reduce using rule 24 (classDefinitionContent)


State 33

   25 classDefinitionContent: attributeDefinition •

    $default  reduce using rule 25 (classDefinitionContent)


State 34

   26 classDefinitionContent: methodDefinition •

    $default  reduce using rule 26 (classDefinitionContent)


State 35

   29 attributeDefinition: determiner • IDENTIFIER ':' typeExpr ';'
   32 methodDefinition: determiner • IDENTIFIER '(' argsDefinition ')' $@1 block
   34                 | determiner • IDENTIFIER '(' argsDefinition ')' $@2 ';'
   36                 | determiner • specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   38                 | determiner • specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   40                 | determiner • specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   42                 | determiner • specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'
   51 specifier: • %empty
   52          | • "virtual"
   53          | • "final"

    "final"     shift, and go to state 82
    "virtual"   shift, and go to state 83
    IDENTIFIER  shift, and go to state 84

    $default  reduce using rule 51 (specifier)

    specifier  go to state 85


State 36

   19 className: IDENTIFIER •
   20          | IDENTIFIER • '<' classNames '>'

    '<'  shift, and go to state 86

    $default  reduce using rule 19 (className)


State 37

   12 implements: "implements" classNames •
   17 classNames: classNames • ',' className

    ','  shift, and go to state 87

    $default  reduce using rule 12 (implements)


State 38

   18 classNames: className •

    $default  reduce using rule 18 (classNames)


State 39

   14 extends: "extends" • determiner className
   47 determiner: • %empty
   48           | • "private"
   49           | • "public"
   50           | • "protected"

    "private"    shift, and go to state 25
    "protected"  shift, and go to state 26
    "public"     shift, and go to state 27

    $default  reduce using rule 47 (determiner)

    determiner  go to state 88


State 40

    8 declaration: "class" IDENTIFIER implements extends • '{' classDefinition '}'

    '{'  shift, and go to state 89


State 41

   16 extends_public: "extends" className •

    $default  reduce using rule 16 (extends_public)


State 42

   10 declaration: "interface" IDENTIFIER extends_public '{' • interfaceDefinition '}'
   87 interfaceDefinition: • "procedure" IDENTIFIER '(' argsDefinition ')' ';'
   88                    | • "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr ';'

    "function"   shift, and go to state 90
    "procedure"  shift, and go to state 91

    interfaceDefinition  go to state 92


State 43

   28 constDefinition: "const" IDENTIFIER • ":=" constExpr

    ":="  shift, and go to state 93


State 44

   30 methodDefinition: "main" '(' • argsDefinition ')' block
  107 argsDefinition: • argsDefinition ',' argDefinition
  108               | • argDefinition
  109 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 94

    argsDefinition  go to state 95
    argDefinition   go to state 96


State 45

   74 user_defined_operators: ":=" •

    $default  reduce using rule 74 (user_defined_operators)


State 46

   75 user_defined_operators: "+=" •

    $default  reduce using rule 75 (user_defined_operators)


State 47

   76 user_defined_operators: "-=" •

    $default  reduce using rule 76 (user_defined_operators)


State 48

   77 user_defined_operators: "*=" •

    $default  reduce using rule 77 (user_defined_operators)


State 49

   78 user_defined_operators: "/=" •

    $default  reduce using rule 78 (user_defined_operators)


State 50

   79 user_defined_operators: "%=" •

    $default  reduce using rule 79 (user_defined_operators)


State 51

   80 user_defined_operators: "||=" •

    $default  reduce using rule 80 (user_defined_operators)


State 52

   81 user_defined_operators: "&&=" •

    $default  reduce using rule 81 (user_defined_operators)


State 53

   82 user_defined_operators: "&=" •

    $default  reduce using rule 82 (user_defined_operators)


State 54

   83 user_defined_operators: "|=" •

    $default  reduce using rule 83 (user_defined_operators)


State 55

   84 user_defined_operators: "<<=" •

    $default  reduce using rule 84 (user_defined_operators)


State 56

   85 user_defined_operators: ">>=" •

    $default  reduce using rule 85 (user_defined_operators)


State 57

   68 user_defined_operators: "++" •

    $default  reduce using rule 68 (user_defined_operators)


State 58

   69 user_defined_operators: "--" •

    $default  reduce using rule 69 (user_defined_operators)


State 59

   54 user_defined_operators: "&&" •

    $default  reduce using rule 54 (user_defined_operators)


State 60

   55 user_defined_operators: "||" •

    $default  reduce using rule 55 (user_defined_operators)


State 61

   72 user_defined_operators: "<<" •

    $default  reduce using rule 72 (user_defined_operators)


State 62

   73 user_defined_operators: ">>" •

    $default  reduce using rule 73 (user_defined_operators)


State 63

   61 user_defined_operators: "==" •

    $default  reduce using rule 61 (user_defined_operators)


State 64

   58 user_defined_operators: "<=" •

    $default  reduce using rule 58 (user_defined_operators)


State 65

   60 user_defined_operators: ">=" •

    $default  reduce using rule 60 (user_defined_operators)


State 66

   62 user_defined_operators: "!=" •

    $default  reduce using rule 62 (user_defined_operators)


State 67

   56 user_defined_operators: '!' •

    $default  reduce using rule 56 (user_defined_operators)


State 68

   57 user_defined_operators: '<' •

    $default  reduce using rule 57 (user_defined_operators)


State 69

   59 user_defined_operators: '>' •

    $default  reduce using rule 59 (user_defined_operators)


State 70

   63 user_defined_operators: '+' •

    $default  reduce using rule 63 (user_defined_operators)


State 71

   64 user_defined_operators: '-' •

    $default  reduce using rule 64 (user_defined_operators)


State 72

   65 user_defined_operators: '*' •

    $default  reduce using rule 65 (user_defined_operators)


State 73

   66 user_defined_operators: '/' •

    $default  reduce using rule 66 (user_defined_operators)


State 74

   67 user_defined_operators: '%' •

    $default  reduce using rule 67 (user_defined_operators)


State 75

   71 user_defined_operators: '|' •

    $default  reduce using rule 71 (user_defined_operators)


State 76

   70 user_defined_operators: '&' •

    $default  reduce using rule 70 (user_defined_operators)


State 77

   86 user_defined_operators: "[]" •

    $default  reduce using rule 86 (user_defined_operators)


State 78

   44 methodDefinition: "operator" user_defined_operators • '(' argsDefinition ')' ':' typeExpr $@7 block
   46                 | "operator" user_defined_operators • '(' argsDefinition ')' ':' typeExpr $@8 ';'

    '('  shift, and go to state 97


State 79

   27 typeDefinition: "type" IDENTIFIER • ":=" typeExpr

    ":="  shift, and go to state 98


State 80

    9 declaration: "class" "main" '{' classDefinition '}' •

    $default  reduce using rule 9 (declaration)


State 81

   22 classDefinition: classDefinitionContent classDefinition •

    $default  reduce using rule 22 (classDefinition)


State 82

   53 specifier: "final" •

    $default  reduce using rule 53 (specifier)


State 83

   52 specifier: "virtual" •

    $default  reduce using rule 52 (specifier)


State 84

   29 attributeDefinition: determiner IDENTIFIER • ':' typeExpr ';'
   32 methodDefinition: determiner IDENTIFIER • '(' argsDefinition ')' $@1 block
   34                 | determiner IDENTIFIER • '(' argsDefinition ')' $@2 ';'

    ':'  shift, and go to state 99
    '('  shift, and go to state 100


State 85

   36 methodDefinition: determiner specifier • "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   38                 | determiner specifier • "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   40                 | determiner specifier • "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   42                 | determiner specifier • "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'

    "function"   shift, and go to state 101
    "procedure"  shift, and go to state 102


State 86

   17 classNames: • classNames ',' className
   18           | • className
   19 className: • IDENTIFIER
   20          | • IDENTIFIER '<' classNames '>'
   20          | IDENTIFIER '<' • classNames '>'

    IDENTIFIER  shift, and go to state 36

    classNames  go to state 103
    className   go to state 38


State 87

   17 classNames: classNames ',' • className
   19 className: • IDENTIFIER
   20          | • IDENTIFIER '<' classNames '>'

    IDENTIFIER  shift, and go to state 36

    className  go to state 104


State 88

   14 extends: "extends" determiner • className
   19 className: • IDENTIFIER
   20          | • IDENTIFIER '<' classNames '>'

    IDENTIFIER  shift, and go to state 36

    className  go to state 105


State 89

    8 declaration: "class" IDENTIFIER implements extends '{' • classDefinition '}'
   21 classDefinition: • %empty
   22                | • classDefinitionContent classDefinition
   23 classDefinitionContent: • typeDefinition
   24                       | • constDefinition
   25                       | • attributeDefinition
   26                       | • methodDefinition
   27 typeDefinition: • "type" IDENTIFIER ":=" typeExpr
   28 constDefinition: • "const" IDENTIFIER ":=" constExpr
   29 attributeDefinition: • determiner IDENTIFIER ':' typeExpr ';'
   30 methodDefinition: • "main" '(' argsDefinition ')' block
   32                 | • determiner IDENTIFIER '(' argsDefinition ')' $@1 block
   34                 | • determiner IDENTIFIER '(' argsDefinition ')' $@2 ';'
   36                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   38                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   40                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   42                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'
   44                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block
   46                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'
   47 determiner: • %empty
   48           | • "private"
   49           | • "public"
   50           | • "protected"

    "const"      shift, and go to state 22
    "main"       shift, and go to state 23
    "operator"   shift, and go to state 24
    "private"    shift, and go to state 25
    "protected"  shift, and go to state 26
    "public"     shift, and go to state 27
    "type"       shift, and go to state 28

    '}'       reduce using rule 21 (classDefinition)
    $default  reduce using rule 47 (determiner)

    classDefinition         go to state 106
    classDefinitionContent  go to state 30
    typeDefinition          go to state 31
    constDefinition         go to state 32
    attributeDefinition     go to state 33
    methodDefinition        go to state 34
    determiner              go to state 35


State 90

   88 interfaceDefinition: "function" • IDENTIFIER '(' argsDefinition ')' ':' typeExpr ';'

    IDENTIFIER  shift, and go to state 107


State 91

   87 interfaceDefinition: "procedure" • IDENTIFIER '(' argsDefinition ')' ';'

    IDENTIFIER  shift, and go to state 108


State 92

   10 declaration: "interface" IDENTIFIER extends_public '{' interfaceDefinition • '}'

    '}'  shift, and go to state 109


State 93

   28 constDefinition: "const" IDENTIFIER ":=" • constExpr
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'

    "null"           shift, and go to state 110
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '['              shift, and go to state 115

    constExpr  go to state 116


State 94

  109 argDefinition: IDENTIFIER • ':' typeExpr

    ':'  shift, and go to state 117


State 95

   30 methodDefinition: "main" '(' argsDefinition • ')' block
  107 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 118
    ')'  shift, and go to state 119


State 96

  108 argsDefinition: argDefinition •

    $default  reduce using rule 108 (argsDefinition)


State 97

   44 methodDefinition: "operator" user_defined_operators '(' • argsDefinition ')' ':' typeExpr $@7 block
   46                 | "operator" user_defined_operators '(' • argsDefinition ')' ':' typeExpr $@8 ';'
  107 argsDefinition: • argsDefinition ',' argDefinition
  108               | • argDefinition
  109 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 94

    argsDefinition  go to state 120
    argDefinition   go to state 96


State 98

   27 typeDefinition: "type" IDENTIFIER ":=" • typeExpr
   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 132
    typePtrExpr  go to state 133


State 99

   29 attributeDefinition: determiner IDENTIFIER ':' • typeExpr ';'
   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 134
    typePtrExpr  go to state 133


State 100

   32 methodDefinition: determiner IDENTIFIER '(' • argsDefinition ')' $@1 block
   34                 | determiner IDENTIFIER '(' • argsDefinition ')' $@2 ';'
  107 argsDefinition: • argsDefinition ',' argDefinition
  108               | • argDefinition
  109 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 94

    argsDefinition  go to state 135
    argDefinition   go to state 96


State 101

   40 methodDefinition: determiner specifier "function" • IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   42                 | determiner specifier "function" • IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'

    IDENTIFIER  shift, and go to state 136


State 102

   36 methodDefinition: determiner specifier "procedure" • IDENTIFIER '(' argsDefinition ')' $@3 block
   38                 | determiner specifier "procedure" • IDENTIFIER '(' argsDefinition ')' $@4 ';'

    IDENTIFIER  shift, and go to state 137


State 103

   17 classNames: classNames • ',' className
   20 className: IDENTIFIER '<' classNames • '>'

    '>'  shift, and go to state 138
    ','  shift, and go to state 87


State 104

   17 classNames: classNames ',' className •

    $default  reduce using rule 17 (classNames)


State 105

   14 extends: "extends" determiner className •

    $default  reduce using rule 14 (extends)


State 106

    8 declaration: "class" IDENTIFIER implements extends '{' classDefinition • '}'

    '}'  shift, and go to state 139


State 107

   88 interfaceDefinition: "function" IDENTIFIER • '(' argsDefinition ')' ':' typeExpr ';'

    '('  shift, and go to state 140


State 108

   87 interfaceDefinition: "procedure" IDENTIFIER • '(' argsDefinition ')' ';'

    '('  shift, and go to state 141


State 109

   10 declaration: "interface" IDENTIFIER extends_public '{' interfaceDefinition '}' •

    $default  reduce using rule 10 (declaration)


State 110

  159 constExpr: "null" •

    $default  reduce using rule 159 (constExpr)


State 111

  163 constExpr: LITTERAL_STRING •

    $default  reduce using rule 163 (constExpr)


State 112

  160 constExpr: NUMBER_INTEGER •

    $default  reduce using rule 160 (constExpr)


State 113

  162 constExpr: LITTERAL_CHAR •

    $default  reduce using rule 162 (constExpr)


State 114

  161 constExpr: NUMBER_FLOAT •

    $default  reduce using rule 161 (constExpr)


State 115

  164 constExpr: '[' • NUMBER_INTEGER ".." NUMBER_INTEGER ']'

    NUMBER_INTEGER  shift, and go to state 142


State 116

   28 constDefinition: "const" IDENTIFIER ":=" constExpr •

    $default  reduce using rule 28 (constDefinition)


State 117

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER
  109 argDefinition: IDENTIFIER ':' • typeExpr

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 143
    typePtrExpr  go to state 133


State 118

  107 argsDefinition: argsDefinition ',' • argDefinition
  109 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 94

    argDefinition  go to state 144


State 119

   30 methodDefinition: "main" '(' argsDefinition ')' • block
  110 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 145

    block  go to state 146


State 120

   44 methodDefinition: "operator" user_defined_operators '(' argsDefinition • ')' ':' typeExpr $@7 block
   46                 | "operator" user_defined_operators '(' argsDefinition • ')' ':' typeExpr $@8 ';'
  107 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 118
    ')'  shift, and go to state 147


State 121

   92 typeExpr: "boolean" •

    $default  reduce using rule 92 (typeExpr)


State 122

   89 typeExpr: "char" •

    $default  reduce using rule 89 (typeExpr)


State 123

   94 typeExpr: "enum" • '<' typeNames '>'

    '<'  shift, and go to state 148


State 124

   91 typeExpr: "float" •

    $default  reduce using rule 91 (typeExpr)


State 125

   90 typeExpr: "integer" •

    $default  reduce using rule 90 (typeExpr)


State 126

   96 typeExpr: "list" • '<' typeExpr '>'

    '<'  shift, and go to state 149


State 127

   98 typeExpr: "map" • '<' typeExpr ',' typeExpr '>'

    '<'  shift, and go to state 150


State 128

   95 typeExpr: "range" • '<' typeExpr '>'

    '<'  shift, and go to state 151


State 129

   97 typeExpr: "set" • '<' typeExpr '>'

    '<'  shift, and go to state 152


State 130

   93 typeExpr: "string" •

    $default  reduce using rule 93 (typeExpr)


State 131

  100 typePtrExpr: IDENTIFIER • '<' typeExprs '>'
  101            | IDENTIFIER •

    '<'  shift, and go to state 153

    $default  reduce using rule 101 (typePtrExpr)


State 132

   27 typeDefinition: "type" IDENTIFIER ":=" typeExpr •

    $default  reduce using rule 27 (typeDefinition)


State 133

   99 typeExpr: typePtrExpr •

    $default  reduce using rule 99 (typeExpr)


State 134

   29 attributeDefinition: determiner IDENTIFIER ':' typeExpr • ';'

    ';'  shift, and go to state 154


State 135

   32 methodDefinition: determiner IDENTIFIER '(' argsDefinition • ')' $@1 block
   34                 | determiner IDENTIFIER '(' argsDefinition • ')' $@2 ';'
  107 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 118
    ')'  shift, and go to state 155


State 136

   40 methodDefinition: determiner specifier "function" IDENTIFIER • '(' argsDefinition ')' ':' typeExpr $@5 block
   42                 | determiner specifier "function" IDENTIFIER • '(' argsDefinition ')' ':' typeExpr $@6 ';'

    '('  shift, and go to state 156


State 137

   36 methodDefinition: determiner specifier "procedure" IDENTIFIER • '(' argsDefinition ')' $@3 block
   38                 | determiner specifier "procedure" IDENTIFIER • '(' argsDefinition ')' $@4 ';'

    '('  shift, and go to state 157


State 138

   20 className: IDENTIFIER '<' classNames '>' •

    $default  reduce using rule 20 (className)


State 139

    8 declaration: "class" IDENTIFIER implements extends '{' classDefinition '}' •

    $default  reduce using rule 8 (declaration)


State 140

   88 interfaceDefinition: "function" IDENTIFIER '(' • argsDefinition ')' ':' typeExpr ';'
  107 argsDefinition: • argsDefinition ',' argDefinition
  108               | • argDefinition
  109 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 94

    argsDefinition  go to state 158
    argDefinition   go to state 96


State 141

   87 interfaceDefinition: "procedure" IDENTIFIER '(' • argsDefinition ')' ';'
  107 argsDefinition: • argsDefinition ',' argDefinition
  108               | • argDefinition
  109 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 94

    argsDefinition  go to state 159
    argDefinition   go to state 96


State 142

  164 constExpr: '[' NUMBER_INTEGER • ".." NUMBER_INTEGER ']'

    ".."  shift, and go to state 160


State 143

  109 argDefinition: IDENTIFIER ':' typeExpr •

    $default  reduce using rule 109 (argDefinition)


State 144

  107 argsDefinition: argsDefinition ',' argDefinition •

    $default  reduce using rule 107 (argsDefinition)


State 145

  110 block: '{' • varDefinitions stms '}'
  111 varDefinitions: • %empty
  112               | • varDefinitions varDefinition

    $default  reduce using rule 111 (varDefinitions)

    varDefinitions  go to state 161


State 146

   30 methodDefinition: "main" '(' argsDefinition ')' block •

    $default  reduce using rule 30 (methodDefinition)


State 147

   44 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' • ':' typeExpr $@7 block
   46                 | "operator" user_defined_operators '(' argsDefinition ')' • ':' typeExpr $@8 ';'

    ':'  shift, and go to state 162


State 148

   94 typeExpr: "enum" '<' • typeNames '>'
  104 typeNames: • typeNames ',' typeName
  105          | • typeName
  106 typeName: • IDENTIFIER

    IDENTIFIER  shift, and go to state 163

    typeNames  go to state 164
    typeName   go to state 165


State 149

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   96         | "list" '<' • typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 166
    typePtrExpr  go to state 133


State 150

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | "map" '<' • typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 167
    typePtrExpr  go to state 133


State 151

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   95         | "range" '<' • typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 168
    typePtrExpr  go to state 133


State 152

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   97         | "set" '<' • typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 169
    typePtrExpr  go to state 133


State 153

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | IDENTIFIER '<' • typeExprs '>'
  101            | • IDENTIFIER
  102 typeExprs: • typeExprs ',' typeExpr
  103          | • typeExpr

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 170
    typePtrExpr  go to state 133
    typeExprs    go to state 171


State 154

   29 attributeDefinition: determiner IDENTIFIER ':' typeExpr ';' •

    $default  reduce using rule 29 (attributeDefinition)


State 155

   31 $@1: • %empty
   32 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' • $@1 block
   33 $@2: • %empty
   34 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' • $@2 ';'

    ';'       reduce using rule 33 ($@2)
    $default  reduce using rule 31 ($@1)

    $@1  go to state 172
    $@2  go to state 173


State 156

   40 methodDefinition: determiner specifier "function" IDENTIFIER '(' • argsDefinition ')' ':' typeExpr $@5 block
   42                 | determiner specifier "function" IDENTIFIER '(' • argsDefinition ')' ':' typeExpr $@6 ';'
  107 argsDefinition: • argsDefinition ',' argDefinition
  108               | • argDefinition
  109 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 94

    argsDefinition  go to state 174
    argDefinition   go to state 96


State 157

   36 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' • argsDefinition ')' $@3 block
   38                 | determiner specifier "procedure" IDENTIFIER '(' • argsDefinition ')' $@4 ';'
  107 argsDefinition: • argsDefinition ',' argDefinition
  108               | • argDefinition
  109 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 94

    argsDefinition  go to state 175
    argDefinition   go to state 96


State 158

   88 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition • ')' ':' typeExpr ';'
  107 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 118
    ')'  shift, and go to state 176


State 159

   87 interfaceDefinition: "procedure" IDENTIFIER '(' argsDefinition • ')' ';'
  107 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 118
    ')'  shift, and go to state 177


State 160

  164 constExpr: '[' NUMBER_INTEGER ".." • NUMBER_INTEGER ']'

    NUMBER_INTEGER  shift, and go to state 178


State 161

  110 block: • '{' varDefinitions stms '}'
  110      | '{' varDefinitions • stms '}'
  112 varDefinitions: varDefinitions • varDefinition
  113 varDefinition: • IDENTIFIER ':' typeExpr ';'
  114 stms: • stms stm
  115     | • stm
  116 stm: • simple_stm ';'
  117    | • for_stm
  118    | • "if" '(' expr ')' stm
  119    | • "if" '(' expr ')' stm "else" stm
  120    | • "while" '(' expr ')' stm
  121    | • "do" stm "while" '(' expr ')' ';'
  122    | • "for" '(' assignedVariable ':' expr ')' stm
  123    | • "foreach" assignedVariable "in" expr stm
  124    | • block
  125 for_stm: • "for" '(' assignedVariable ';' expr ';' expr ')' block
  126        | • "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | • "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | • "for" error ';'
  129        | • "for" error $end
  130 simple_stm: • assignedVariable ":=" expr
  131           | • assignedVariable "++"
  132           | • assignedVariable "--"
  133           | • assignedVariable "+=" expr
  134           | • assignedVariable "-=" expr
  135           | • assignedVariable "*=" expr
  136           | • assignedVariable "/=" expr
  137           | • assignedVariable "%=" expr
  138           | • assignedVariable "||=" expr
  139           | • assignedVariable "&&=" expr
  140           | • assignedVariable "&=" expr
  141           | • assignedVariable "|=" expr
  142           | • assignedVariable "<<=" expr
  143           | • assignedVariable ">>=" expr
  144           | • methodName '(' args ')'
  145           | • "readln" '(' expr ')'
  146           | • "write" '(' expr ')'
  147           | • "writeln" '(' expr ')'
  148           | • "break"
  149           | • "continue"
  150           | • "return" expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 179
    "continue"  shift, and go to state 180
    "do"        shift, and go to state 181
    "for"       shift, and go to state 182
    "foreach"   shift, and go to state 183
    "if"        shift, and go to state 184
    "readln"    shift, and go to state 185
    "return"    shift, and go to state 186
    "this"      shift, and go to state 187
    "write"     shift, and go to state 188
    "writeln"   shift, and go to state 189
    "while"     shift, and go to state 190
    IDENTIFIER  shift, and go to state 191
    '{'         shift, and go to state 145

    block             go to state 192
    varDefinition     go to state 193
    stms              go to state 194
    stm               go to state 195
    for_stm           go to state 196
    simple_stm        go to state 197
    assignedVariable  go to state 198
    methodName        go to state 199


State 162

   44 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' • typeExpr $@7 block
   46                 | "operator" user_defined_operators '(' argsDefinition ')' ':' • typeExpr $@8 ';'
   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 200
    typePtrExpr  go to state 133


State 163

  106 typeName: IDENTIFIER •

    $default  reduce using rule 106 (typeName)


State 164

   94 typeExpr: "enum" '<' typeNames • '>'
  104 typeNames: typeNames • ',' typeName

    '>'  shift, and go to state 201
    ','  shift, and go to state 202


State 165

  105 typeNames: typeName •

    $default  reduce using rule 105 (typeNames)


State 166

   96 typeExpr: "list" '<' typeExpr • '>'

    '>'  shift, and go to state 203


State 167

   98 typeExpr: "map" '<' typeExpr • ',' typeExpr '>'

    ','  shift, and go to state 204


State 168

   95 typeExpr: "range" '<' typeExpr • '>'

    '>'  shift, and go to state 205


State 169

   97 typeExpr: "set" '<' typeExpr • '>'

    '>'  shift, and go to state 206


State 170

  103 typeExprs: typeExpr •

    $default  reduce using rule 103 (typeExprs)


State 171

  100 typePtrExpr: IDENTIFIER '<' typeExprs • '>'
  102 typeExprs: typeExprs • ',' typeExpr

    '>'  shift, and go to state 207
    ','  shift, and go to state 208


State 172

   32 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@1 • block
  110 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 145

    block  go to state 209


State 173

   34 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@2 • ';'

    ';'  shift, and go to state 210


State 174

   40 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition • ')' ':' typeExpr $@5 block
   42                 | determiner specifier "function" IDENTIFIER '(' argsDefinition • ')' ':' typeExpr $@6 ';'
  107 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 118
    ')'  shift, and go to state 211


State 175

   36 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition • ')' $@3 block
   38                 | determiner specifier "procedure" IDENTIFIER '(' argsDefinition • ')' $@4 ';'
  107 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 118
    ')'  shift, and go to state 212


State 176

   88 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition ')' • ':' typeExpr ';'

    ':'  shift, and go to state 213


State 177

   87 interfaceDefinition: "procedure" IDENTIFIER '(' argsDefinition ')' • ';'

    ';'  shift, and go to state 214


State 178

  164 constExpr: '[' NUMBER_INTEGER ".." NUMBER_INTEGER • ']'

    ']'  shift, and go to state 215


State 179

  148 simple_stm: "break" •

    $default  reduce using rule 148 (simple_stm)


State 180

  149 simple_stm: "continue" •

    $default  reduce using rule 149 (simple_stm)


State 181

  110 block: • '{' varDefinitions stms '}'
  116 stm: • simple_stm ';'
  117    | • for_stm
  118    | • "if" '(' expr ')' stm
  119    | • "if" '(' expr ')' stm "else" stm
  120    | • "while" '(' expr ')' stm
  121    | • "do" stm "while" '(' expr ')' ';'
  121    | "do" • stm "while" '(' expr ')' ';'
  122    | • "for" '(' assignedVariable ':' expr ')' stm
  123    | • "foreach" assignedVariable "in" expr stm
  124    | • block
  125 for_stm: • "for" '(' assignedVariable ';' expr ';' expr ')' block
  126        | • "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | • "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | • "for" error ';'
  129        | • "for" error $end
  130 simple_stm: • assignedVariable ":=" expr
  131           | • assignedVariable "++"
  132           | • assignedVariable "--"
  133           | • assignedVariable "+=" expr
  134           | • assignedVariable "-=" expr
  135           | • assignedVariable "*=" expr
  136           | • assignedVariable "/=" expr
  137           | • assignedVariable "%=" expr
  138           | • assignedVariable "||=" expr
  139           | • assignedVariable "&&=" expr
  140           | • assignedVariable "&=" expr
  141           | • assignedVariable "|=" expr
  142           | • assignedVariable "<<=" expr
  143           | • assignedVariable ">>=" expr
  144           | • methodName '(' args ')'
  145           | • "readln" '(' expr ')'
  146           | • "write" '(' expr ')'
  147           | • "writeln" '(' expr ')'
  148           | • "break"
  149           | • "continue"
  150           | • "return" expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 179
    "continue"  shift, and go to state 180
    "do"        shift, and go to state 181
    "for"       shift, and go to state 182
    "foreach"   shift, and go to state 183
    "if"        shift, and go to state 184
    "readln"    shift, and go to state 185
    "return"    shift, and go to state 186
    "this"      shift, and go to state 187
    "write"     shift, and go to state 188
    "writeln"   shift, and go to state 189
    "while"     shift, and go to state 190
    IDENTIFIER  shift, and go to state 216
    '{'         shift, and go to state 145

    block             go to state 192
    stm               go to state 217
    for_stm           go to state 196
    simple_stm        go to state 197
    assignedVariable  go to state 198
    methodName        go to state 199


State 182

  122 stm: "for" • '(' assignedVariable ':' expr ')' stm
  125 for_stm: "for" • '(' assignedVariable ';' expr ';' expr ')' block
  126        | "for" • '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | "for" • '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | "for" • error ';'
  129        | "for" • error $end

    error  shift, and go to state 218
    '('    shift, and go to state 219


State 183

  123 stm: "foreach" • assignedVariable "in" expr stm
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"

    "this"      shift, and go to state 187
    IDENTIFIER  shift, and go to state 220

    assignedVariable  go to state 221


State 184

  118 stm: "if" • '(' expr ')' stm
  119    | "if" • '(' expr ')' stm "else" stm

    '('  shift, and go to state 222


State 185

  145 simple_stm: "readln" • '(' expr ')'

    '('  shift, and go to state 223


State 186

  150 simple_stm: "return" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 233


State 187

  154 assignedVariable: "this" •

    $default  reduce using rule 154 (assignedVariable)


State 188

  146 simple_stm: "write" • '(' expr ')'

    '('  shift, and go to state 234


State 189

  147 simple_stm: "writeln" • '(' expr ')'

    '('  shift, and go to state 235


State 190

  120 stm: "while" • '(' expr ')' stm

    '('  shift, and go to state 236


State 191

  113 varDefinition: IDENTIFIER • ':' typeExpr ';'
  151 assignedVariable: IDENTIFIER •
  152                 | IDENTIFIER • '[' args ']'
  155 methodName: IDENTIFIER •

    ':'  shift, and go to state 237
    '['  shift, and go to state 238

    '('       reduce using rule 155 (methodName)
    $default  reduce using rule 151 (assignedVariable)


State 192

  124 stm: block •

    $default  reduce using rule 124 (stm)


State 193

  112 varDefinitions: varDefinitions varDefinition •

    $default  reduce using rule 112 (varDefinitions)


State 194

  110 block: • '{' varDefinitions stms '}'
  110      | '{' varDefinitions stms • '}'
  114 stms: stms • stm
  116 stm: • simple_stm ';'
  117    | • for_stm
  118    | • "if" '(' expr ')' stm
  119    | • "if" '(' expr ')' stm "else" stm
  120    | • "while" '(' expr ')' stm
  121    | • "do" stm "while" '(' expr ')' ';'
  122    | • "for" '(' assignedVariable ':' expr ')' stm
  123    | • "foreach" assignedVariable "in" expr stm
  124    | • block
  125 for_stm: • "for" '(' assignedVariable ';' expr ';' expr ')' block
  126        | • "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | • "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | • "for" error ';'
  129        | • "for" error $end
  130 simple_stm: • assignedVariable ":=" expr
  131           | • assignedVariable "++"
  132           | • assignedVariable "--"
  133           | • assignedVariable "+=" expr
  134           | • assignedVariable "-=" expr
  135           | • assignedVariable "*=" expr
  136           | • assignedVariable "/=" expr
  137           | • assignedVariable "%=" expr
  138           | • assignedVariable "||=" expr
  139           | • assignedVariable "&&=" expr
  140           | • assignedVariable "&=" expr
  141           | • assignedVariable "|=" expr
  142           | • assignedVariable "<<=" expr
  143           | • assignedVariable ">>=" expr
  144           | • methodName '(' args ')'
  145           | • "readln" '(' expr ')'
  146           | • "write" '(' expr ')'
  147           | • "writeln" '(' expr ')'
  148           | • "break"
  149           | • "continue"
  150           | • "return" expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 179
    "continue"  shift, and go to state 180
    "do"        shift, and go to state 181
    "for"       shift, and go to state 182
    "foreach"   shift, and go to state 183
    "if"        shift, and go to state 184
    "readln"    shift, and go to state 185
    "return"    shift, and go to state 186
    "this"      shift, and go to state 187
    "write"     shift, and go to state 188
    "writeln"   shift, and go to state 189
    "while"     shift, and go to state 190
    IDENTIFIER  shift, and go to state 216
    '{'         shift, and go to state 145
    '}'         shift, and go to state 239

    block             go to state 192
    stm               go to state 240
    for_stm           go to state 196
    simple_stm        go to state 197
    assignedVariable  go to state 198
    methodName        go to state 199


State 195

  115 stms: stm •

    $default  reduce using rule 115 (stms)


State 196

  117 stm: for_stm •

    $default  reduce using rule 117 (stm)


State 197

  116 stm: simple_stm • ';'

    ';'  shift, and go to state 241


State 198

  130 simple_stm: assignedVariable • ":=" expr
  131           | assignedVariable • "++"
  132           | assignedVariable • "--"
  133           | assignedVariable • "+=" expr
  134           | assignedVariable • "-=" expr
  135           | assignedVariable • "*=" expr
  136           | assignedVariable • "/=" expr
  137           | assignedVariable • "%=" expr
  138           | assignedVariable • "||=" expr
  139           | assignedVariable • "&&=" expr
  140           | assignedVariable • "&=" expr
  141           | assignedVariable • "|=" expr
  142           | assignedVariable • "<<=" expr
  143           | assignedVariable • ">>=" expr
  153 assignedVariable: assignedVariable • '.' IDENTIFIER
  156 methodName: assignedVariable • '.' IDENTIFIER

    ":="   shift, and go to state 242
    "+="   shift, and go to state 243
    "-="   shift, and go to state 244
    "*="   shift, and go to state 245
    "/="   shift, and go to state 246
    "%="   shift, and go to state 247
    "||="  shift, and go to state 248
    "&&="  shift, and go to state 249
    "&="   shift, and go to state 250
    "|="   shift, and go to state 251
    "<<="  shift, and go to state 252
    ">>="  shift, and go to state 253
    "++"   shift, and go to state 254
    "--"   shift, and go to state 255
    '.'    shift, and go to state 256


State 199

  144 simple_stm: methodName • '(' args ')'

    '('  shift, and go to state 257


State 200

   43 $@7: • %empty
   44 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr • $@7 block
   45 $@8: • %empty
   46 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr • $@8 ';'

    ';'       reduce using rule 45 ($@8)
    $default  reduce using rule 43 ($@7)

    $@7  go to state 258
    $@8  go to state 259


State 201

   94 typeExpr: "enum" '<' typeNames '>' •

    $default  reduce using rule 94 (typeExpr)


State 202

  104 typeNames: typeNames ',' • typeName
  106 typeName: • IDENTIFIER

    IDENTIFIER  shift, and go to state 163

    typeName  go to state 260


State 203

   96 typeExpr: "list" '<' typeExpr '>' •

    $default  reduce using rule 96 (typeExpr)


State 204

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | "map" '<' typeExpr ',' • typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 261
    typePtrExpr  go to state 133


State 205

   95 typeExpr: "range" '<' typeExpr '>' •

    $default  reduce using rule 95 (typeExpr)


State 206

   97 typeExpr: "set" '<' typeExpr '>' •

    $default  reduce using rule 97 (typeExpr)


State 207

  100 typePtrExpr: IDENTIFIER '<' typeExprs '>' •

    $default  reduce using rule 100 (typePtrExpr)


State 208

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER
  102 typeExprs: typeExprs ',' • typeExpr

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 262
    typePtrExpr  go to state 133


State 209

   32 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@1 block •

    $default  reduce using rule 32 (methodDefinition)


State 210

   34 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@2 ';' •

    $default  reduce using rule 34 (methodDefinition)


State 211

   40 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' • ':' typeExpr $@5 block
   42                 | determiner specifier "function" IDENTIFIER '(' argsDefinition ')' • ':' typeExpr $@6 ';'

    ':'  shift, and go to state 263


State 212

   35 $@3: • %empty
   36 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' • $@3 block
   37 $@4: • %empty
   38 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' • $@4 ';'

    ';'       reduce using rule 37 ($@4)
    $default  reduce using rule 35 ($@3)

    $@3  go to state 264
    $@4  go to state 265


State 213

   88 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition ')' ':' • typeExpr ';'
   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 266
    typePtrExpr  go to state 133


State 214

   87 interfaceDefinition: "procedure" IDENTIFIER '(' argsDefinition ')' ';' •

    $default  reduce using rule 87 (interfaceDefinition)


State 215

  164 constExpr: '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']' •

    $default  reduce using rule 164 (constExpr)


State 216

  151 assignedVariable: IDENTIFIER •
  152                 | IDENTIFIER • '[' args ']'
  155 methodName: IDENTIFIER •

    '['  shift, and go to state 238

    '('       reduce using rule 155 (methodName)
    $default  reduce using rule 151 (assignedVariable)


State 217

  121 stm: "do" stm • "while" '(' expr ')' ';'

    "while"  shift, and go to state 267


State 218

  128 for_stm: "for" error • ';'
  129        | "for" error • $end

    $end  shift, and go to state 268
    ';'   shift, and go to state 269


State 219

  122 stm: "for" '(' • assignedVariable ':' expr ')' stm
  125 for_stm: "for" '(' • assignedVariable ';' expr ';' expr ')' block
  126        | "for" '(' • assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | "for" '(' • IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"

    "this"      shift, and go to state 187
    IDENTIFIER  shift, and go to state 270

    assignedVariable  go to state 271


State 220

  151 assignedVariable: IDENTIFIER •
  152                 | IDENTIFIER • '[' args ']'

    '['  shift, and go to state 238

    $default  reduce using rule 151 (assignedVariable)


State 221

  123 stm: "foreach" assignedVariable • "in" expr stm
  153 assignedVariable: assignedVariable • '.' IDENTIFIER

    "in"  shift, and go to state 272
    '.'   shift, and go to state 273


State 222

  118 stm: "if" '(' • expr ')' stm
  119    | "if" '(' • expr ')' stm "else" stm
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 274


State 223

  145 simple_stm: "readln" '(' • expr ')'
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 275


State 224

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  186     | "++" • expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 276


State 225

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  187     | "--" • expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 277


State 226

  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER
  168 expr: "new" • typePtrExpr '(' args_opt ')'

    IDENTIFIER  shift, and go to state 131

    typePtrExpr  go to state 278


State 227

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  171     | '!' • expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 279


State 228

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  180     | '-' • expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 280


State 229

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'
  192     | '(' • expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 281


State 230

  153 assignedVariable: assignedVariable • '.' IDENTIFIER
  156 methodName: assignedVariable • '.' IDENTIFIER
  166 expr: assignedVariable •

    '.'  shift, and go to state 256

    $default  reduce using rule 166 (expr)


State 231

  167 expr: methodName • '(' args ')'

    '('  shift, and go to state 282


State 232

  165 expr: constExpr •

    $default  reduce using rule 165 (expr)


State 233

  150 simple_stm: "return" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 150 (simple_stm)


State 234

  146 simple_stm: "write" '(' • expr ')'
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 302


State 235

  147 simple_stm: "writeln" '(' • expr ')'
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 303


State 236

  120 stm: "while" '(' • expr ')' stm
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 304


State 237

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER
  113 varDefinition: IDENTIFIER ':' • typeExpr ';'

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 305
    typePtrExpr  go to state 133


State 238

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  152                 | IDENTIFIER '[' • args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  157 args: • args ',' expr
  158     | • expr
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    args              go to state 306
    constExpr         go to state 232
    expr              go to state 307


State 239

  110 block: '{' varDefinitions stms '}' •

    $default  reduce using rule 110 (block)


State 240

  114 stms: stms stm •

    $default  reduce using rule 114 (stms)


State 241

  116 stm: simple_stm ';' •

    $default  reduce using rule 116 (stm)


State 242

  130 simple_stm: assignedVariable ":=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 308


State 243

  133 simple_stm: assignedVariable "+=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 309


State 244

  134 simple_stm: assignedVariable "-=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 310


State 245

  135 simple_stm: assignedVariable "*=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 311


State 246

  136 simple_stm: assignedVariable "/=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 312


State 247

  137 simple_stm: assignedVariable "%=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 313


State 248

  138 simple_stm: assignedVariable "||=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 314


State 249

  139 simple_stm: assignedVariable "&&=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 315


State 250

  140 simple_stm: assignedVariable "&=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 316


State 251

  141 simple_stm: assignedVariable "|=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 317


State 252

  142 simple_stm: assignedVariable "<<=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 318


State 253

  143 simple_stm: assignedVariable ">>=" • expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 319


State 254

  131 simple_stm: assignedVariable "++" •

    $default  reduce using rule 131 (simple_stm)


State 255

  132 simple_stm: assignedVariable "--" •

    $default  reduce using rule 132 (simple_stm)


State 256

  153 assignedVariable: assignedVariable '.' • IDENTIFIER
  156 methodName: assignedVariable '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 320


State 257

  144 simple_stm: methodName '(' • args ')'
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  157 args: • args ',' expr
  158     | • expr
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    args              go to state 321
    constExpr         go to state 232
    expr              go to state 307


State 258

   44 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 • block
  110 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 145

    block  go to state 322


State 259

   46 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 • ';'

    ';'  shift, and go to state 323


State 260

  104 typeNames: typeNames ',' typeName •

    $default  reduce using rule 104 (typeNames)


State 261

   98 typeExpr: "map" '<' typeExpr ',' typeExpr • '>'

    '>'  shift, and go to state 324


State 262

  102 typeExprs: typeExprs ',' typeExpr •

    $default  reduce using rule 102 (typeExprs)


State 263

   40 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' • typeExpr $@5 block
   42                 | determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' • typeExpr $@6 ';'
   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 325
    typePtrExpr  go to state 133


State 264

   36 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 • block
  110 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 145

    block  go to state 326


State 265

   38 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 • ';'

    ';'  shift, and go to state 327


State 266

   88 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr • ';'

    ';'  shift, and go to state 328


State 267

  121 stm: "do" stm "while" • '(' expr ')' ';'

    '('  shift, and go to state 329


State 268

  129 for_stm: "for" error $end •

    $default  reduce using rule 129 (for_stm)


State 269

  128 for_stm: "for" error ';' •

    $default  reduce using rule 128 (for_stm)


State 270

  127 for_stm: "for" '(' IDENTIFIER • ':' typeExpr ';' expr ';' expr ')' block
  151 assignedVariable: IDENTIFIER •
  152                 | IDENTIFIER • '[' args ']'

    ':'  shift, and go to state 330
    '['  shift, and go to state 238

    ':'       [reduce using rule 151 (assignedVariable)]
    $default  reduce using rule 151 (assignedVariable)

    shift/reduce conflict on token ':':
      151 assignedVariable: IDENTIFIER •
      127 for_stm: "for" '(' IDENTIFIER • ':' typeExpr ';' expr ';' expr ')' block
      First example: imports "class" "main" '{' "main" '(' argsDefinition '{' varDefinitions "for" '(' IDENTIFIER • ':' typeExpr ';' expr ';' expr ')' block '}' block classDefinition '}' $end
      Shift derivation
        $accept
        ↳ S                                                                                                                                                                                         $end
          ↳ imports declarations
                    ↳ declaration
                      ↳ "class" "main" '{' classDefinition                                                                                                                                      '}'
                                           ↳ classDefinitionContent                                                                                                             classDefinition
                                             ↳ methodDefinition
                                               ↳ "main" '(' argsDefinition block                                                                                          block
                                                                           ↳ '{' varDefinitions stms                                                                  '}'
                                                                                                ↳ stm
                                                                                                  ↳ for_stm
                                                                                                    ↳ "for" '(' IDENTIFIER • ':' typeExpr ';' expr ';' expr ')' block
      Second example: imports "class" "main" '{' "main" '(' argsDefinition ')' '{' varDefinitions "for" '(' IDENTIFIER • ':' expr ')' stm '}' classDefinition '}' $end
      Reduce derivation
        $accept
        ↳ S                                                                                                                                                                 $end
          ↳ imports declarations
                    ↳ declaration
                      ↳ "class" "main" '{' classDefinition                                                                                                              '}'
                                           ↳ classDefinitionContent                                                                                     classDefinition
                                             ↳ methodDefinition
                                               ↳ "main" '(' argsDefinition ')' block
                                                                               ↳ '{' varDefinitions stms                                            '}'
                                                                                                    ↳ stm
                                                                                                      ↳ "for" '(' assignedVariable ':' expr ')' stm
                                                                                                                  ↳ IDENTIFIER •



State 271

  122 stm: "for" '(' assignedVariable • ':' expr ')' stm
  125 for_stm: "for" '(' assignedVariable • ';' expr ';' expr ')' block
  126        | "for" '(' assignedVariable • ":=" constExpr ';' expr ';' expr ')' block
  153 assignedVariable: assignedVariable • '.' IDENTIFIER

    ":="  shift, and go to state 331
    ':'   shift, and go to state 332
    ';'   shift, and go to state 333
    '.'   shift, and go to state 273


State 272

  123 stm: "foreach" assignedVariable "in" • expr stm
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 334


State 273

  153 assignedVariable: assignedVariable '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 335


State 274

  118 stm: "if" '(' expr • ')' stm
  119    | "if" '(' expr • ')' stm "else" stm
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 336


State 275

  145 simple_stm: "readln" '(' expr • ')'
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 337


State 276

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  186     | "++" expr •
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 186 (expr)


State 277

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  187     | "--" expr •
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 187 (expr)


State 278

  168 expr: "new" typePtrExpr • '(' args_opt ')'

    '('  shift, and go to state 338


State 279

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  171     | '!' expr •
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 171 (expr)


State 280

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  180     | '-' expr •
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 180 (expr)


State 281

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr
  192     | '(' expr • ')'

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 339


State 282

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  157 args: • args ',' expr
  158     | • expr
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  167     | methodName '(' • args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    args              go to state 340
    constExpr         go to state 232
    expr              go to state 307


State 283

  184 expr: expr "++" •

    $default  reduce using rule 184 (expr)


State 284

  185 expr: expr "--" •

    $default  reduce using rule 185 (expr)


State 285

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  169     | expr "&&" • expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 341


State 286

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  170     | expr "||" • expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 342


State 287

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  190     | expr "<<" • expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 343


State 288

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  191     | expr ">>" • expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 344


State 289

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  176     | expr "==" • expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 345


State 290

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  173     | expr "<=" • expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 346


State 291

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  175     | expr ">=" • expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 347


State 292

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  177     | expr "!=" • expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 348


State 293

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  172     | expr '<' • expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 349


State 294

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  174     | expr '>' • expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 350


State 295

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  178     | expr '+' • expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 351


State 296

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  179     | expr '-' • expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 352


State 297

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  181     | expr '*' • expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 353


State 298

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  182     | expr '/' • expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 354


State 299

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  183     | expr '%' • expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 355


State 300

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  189     | expr '|' • expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 356


State 301

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  188     | expr '&' • expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 357


State 302

  146 simple_stm: "write" '(' expr • ')'
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 358


State 303

  147 simple_stm: "writeln" '(' expr • ')'
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 359


State 304

  120 stm: "while" '(' expr • ')' stm
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 360


State 305

  113 varDefinition: IDENTIFIER ':' typeExpr • ';'

    ';'  shift, and go to state 361


State 306

  152 assignedVariable: IDENTIFIER '[' args • ']'
  157 args: args • ',' expr

    ','  shift, and go to state 362
    ']'  shift, and go to state 363


State 307

  158 args: expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 158 (args)


State 308

  130 simple_stm: assignedVariable ":=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 130 (simple_stm)


State 309

  133 simple_stm: assignedVariable "+=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 133 (simple_stm)


State 310

  134 simple_stm: assignedVariable "-=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 134 (simple_stm)


State 311

  135 simple_stm: assignedVariable "*=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 135 (simple_stm)


State 312

  136 simple_stm: assignedVariable "/=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 136 (simple_stm)


State 313

  137 simple_stm: assignedVariable "%=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 137 (simple_stm)


State 314

  138 simple_stm: assignedVariable "||=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 138 (simple_stm)


State 315

  139 simple_stm: assignedVariable "&&=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 139 (simple_stm)


State 316

  140 simple_stm: assignedVariable "&=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 140 (simple_stm)


State 317

  141 simple_stm: assignedVariable "|=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 141 (simple_stm)


State 318

  142 simple_stm: assignedVariable "<<=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 142 (simple_stm)


State 319

  143 simple_stm: assignedVariable ">>=" expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 143 (simple_stm)


State 320

  153 assignedVariable: assignedVariable '.' IDENTIFIER •
  156 methodName: assignedVariable '.' IDENTIFIER •

    '('       reduce using rule 156 (methodName)
    $default  reduce using rule 153 (assignedVariable)


State 321

  144 simple_stm: methodName '(' args • ')'
  157 args: args • ',' expr

    ','  shift, and go to state 362
    ')'  shift, and go to state 364


State 322

   44 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block •

    $default  reduce using rule 44 (methodDefinition)


State 323

   46 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';' •

    $default  reduce using rule 46 (methodDefinition)


State 324

   98 typeExpr: "map" '<' typeExpr ',' typeExpr '>' •

    $default  reduce using rule 98 (typeExpr)


State 325

   39 $@5: • %empty
   40 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr • $@5 block
   41 $@6: • %empty
   42 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr • $@6 ';'

    ';'       reduce using rule 41 ($@6)
    $default  reduce using rule 39 ($@5)

    $@5  go to state 365
    $@6  go to state 366


State 326

   36 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block •

    $default  reduce using rule 36 (methodDefinition)


State 327

   38 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';' •

    $default  reduce using rule 38 (methodDefinition)


State 328

   88 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr ';' •

    $default  reduce using rule 88 (interfaceDefinition)


State 329

  121 stm: "do" stm "while" '(' • expr ')' ';'
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 367


State 330

   89 typeExpr: • "char"
   90         | • "integer"
   91         | • "float"
   92         | • "boolean"
   93         | • "string"
   94         | • "enum" '<' typeNames '>'
   95         | • "range" '<' typeExpr '>'
   96         | • "list" '<' typeExpr '>'
   97         | • "set" '<' typeExpr '>'
   98         | • "map" '<' typeExpr ',' typeExpr '>'
   99         | • typePtrExpr
  100 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  101            | • IDENTIFIER
  127 for_stm: "for" '(' IDENTIFIER ':' • typeExpr ';' expr ';' expr ')' block

    "boolean"   shift, and go to state 121
    "char"      shift, and go to state 122
    "enum"      shift, and go to state 123
    "float"     shift, and go to state 124
    "integer"   shift, and go to state 125
    "list"      shift, and go to state 126
    "map"       shift, and go to state 127
    "range"     shift, and go to state 128
    "set"       shift, and go to state 129
    "string"    shift, and go to state 130
    IDENTIFIER  shift, and go to state 131

    typeExpr     go to state 368
    typePtrExpr  go to state 133


State 331

  126 for_stm: "for" '(' assignedVariable ":=" • constExpr ';' expr ';' expr ')' block
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'

    "null"           shift, and go to state 110
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '['              shift, and go to state 115

    constExpr  go to state 369


State 332

  122 stm: "for" '(' assignedVariable ':' • expr ')' stm
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 370


State 333

  125 for_stm: "for" '(' assignedVariable ';' • expr ';' expr ')' block
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 371


State 334

  110 block: • '{' varDefinitions stms '}'
  116 stm: • simple_stm ';'
  117    | • for_stm
  118    | • "if" '(' expr ')' stm
  119    | • "if" '(' expr ')' stm "else" stm
  120    | • "while" '(' expr ')' stm
  121    | • "do" stm "while" '(' expr ')' ';'
  122    | • "for" '(' assignedVariable ':' expr ')' stm
  123    | • "foreach" assignedVariable "in" expr stm
  123    | "foreach" assignedVariable "in" expr • stm
  124    | • block
  125 for_stm: • "for" '(' assignedVariable ';' expr ';' expr ')' block
  126        | • "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | • "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | • "for" error ';'
  129        | • "for" error $end
  130 simple_stm: • assignedVariable ":=" expr
  131           | • assignedVariable "++"
  132           | • assignedVariable "--"
  133           | • assignedVariable "+=" expr
  134           | • assignedVariable "-=" expr
  135           | • assignedVariable "*=" expr
  136           | • assignedVariable "/=" expr
  137           | • assignedVariable "%=" expr
  138           | • assignedVariable "||=" expr
  139           | • assignedVariable "&&=" expr
  140           | • assignedVariable "&=" expr
  141           | • assignedVariable "|=" expr
  142           | • assignedVariable "<<=" expr
  143           | • assignedVariable ">>=" expr
  144           | • methodName '(' args ')'
  145           | • "readln" '(' expr ')'
  146           | • "write" '(' expr ')'
  147           | • "writeln" '(' expr ')'
  148           | • "break"
  149           | • "continue"
  150           | • "return" expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"        shift, and go to state 283
    "--"        shift, and go to state 284
    "&&"        shift, and go to state 285
    "||"        shift, and go to state 286
    "<<"        shift, and go to state 287
    ">>"        shift, and go to state 288
    "=="        shift, and go to state 289
    "<="        shift, and go to state 290
    ">="        shift, and go to state 291
    "!="        shift, and go to state 292
    "break"     shift, and go to state 179
    "continue"  shift, and go to state 180
    "do"        shift, and go to state 181
    "for"       shift, and go to state 182
    "foreach"   shift, and go to state 183
    "if"        shift, and go to state 184
    "readln"    shift, and go to state 185
    "return"    shift, and go to state 186
    "this"      shift, and go to state 187
    "write"     shift, and go to state 188
    "writeln"   shift, and go to state 189
    "while"     shift, and go to state 190
    IDENTIFIER  shift, and go to state 216
    '<'         shift, and go to state 293
    '>'         shift, and go to state 294
    '+'         shift, and go to state 295
    '-'         shift, and go to state 296
    '*'         shift, and go to state 297
    '/'         shift, and go to state 298
    '%'         shift, and go to state 299
    '|'         shift, and go to state 300
    '&'         shift, and go to state 301
    '{'         shift, and go to state 145

    block             go to state 192
    stm               go to state 372
    for_stm           go to state 196
    simple_stm        go to state 197
    assignedVariable  go to state 198
    methodName        go to state 199


State 335

  153 assignedVariable: assignedVariable '.' IDENTIFIER •

    $default  reduce using rule 153 (assignedVariable)


State 336

  110 block: • '{' varDefinitions stms '}'
  116 stm: • simple_stm ';'
  117    | • for_stm
  118    | • "if" '(' expr ')' stm
  118    | "if" '(' expr ')' • stm
  119    | • "if" '(' expr ')' stm "else" stm
  119    | "if" '(' expr ')' • stm "else" stm
  120    | • "while" '(' expr ')' stm
  121    | • "do" stm "while" '(' expr ')' ';'
  122    | • "for" '(' assignedVariable ':' expr ')' stm
  123    | • "foreach" assignedVariable "in" expr stm
  124    | • block
  125 for_stm: • "for" '(' assignedVariable ';' expr ';' expr ')' block
  126        | • "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | • "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | • "for" error ';'
  129        | • "for" error $end
  130 simple_stm: • assignedVariable ":=" expr
  131           | • assignedVariable "++"
  132           | • assignedVariable "--"
  133           | • assignedVariable "+=" expr
  134           | • assignedVariable "-=" expr
  135           | • assignedVariable "*=" expr
  136           | • assignedVariable "/=" expr
  137           | • assignedVariable "%=" expr
  138           | • assignedVariable "||=" expr
  139           | • assignedVariable "&&=" expr
  140           | • assignedVariable "&=" expr
  141           | • assignedVariable "|=" expr
  142           | • assignedVariable "<<=" expr
  143           | • assignedVariable ">>=" expr
  144           | • methodName '(' args ')'
  145           | • "readln" '(' expr ')'
  146           | • "write" '(' expr ')'
  147           | • "writeln" '(' expr ')'
  148           | • "break"
  149           | • "continue"
  150           | • "return" expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 179
    "continue"  shift, and go to state 180
    "do"        shift, and go to state 181
    "for"       shift, and go to state 182
    "foreach"   shift, and go to state 183
    "if"        shift, and go to state 184
    "readln"    shift, and go to state 185
    "return"    shift, and go to state 186
    "this"      shift, and go to state 187
    "write"     shift, and go to state 188
    "writeln"   shift, and go to state 189
    "while"     shift, and go to state 190
    IDENTIFIER  shift, and go to state 216
    '{'         shift, and go to state 145

    block             go to state 192
    stm               go to state 373
    for_stm           go to state 196
    simple_stm        go to state 197
    assignedVariable  go to state 198
    methodName        go to state 199


State 337

  145 simple_stm: "readln" '(' expr ')' •

    $default  reduce using rule 145 (simple_stm)


State 338

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  157 args: • args ',' expr
  158     | • expr
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  168     | "new" typePtrExpr '(' • args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'
  193 args_opt: • %empty
  194         | • args

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    $default  reduce using rule 193 (args_opt)

    assignedVariable  go to state 230
    methodName        go to state 231
    args              go to state 374
    constExpr         go to state 232
    expr              go to state 307
    args_opt          go to state 375


State 339

  192 expr: '(' expr ')' •

    $default  reduce using rule 192 (expr)


State 340

  157 args: args • ',' expr
  167 expr: methodName '(' args • ')'

    ','  shift, and go to state 362
    ')'  shift, and go to state 376


State 341

  169 expr: expr • "&&" expr
  169     | expr "&&" expr •
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 169 (expr)


State 342

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  170     | expr "||" expr •
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 170 (expr)


State 343

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  190     | expr "<<" expr •
  191     | expr • ">>" expr

    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288

    $default  reduce using rule 190 (expr)


State 344

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr
  191     | expr ">>" expr •

    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288

    $default  reduce using rule 191 (expr)


State 345

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  176     | expr "==" expr •
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 176 (expr)


State 346

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  173     | expr "<=" expr •
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 173 (expr)


State 347

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  175     | expr ">=" expr •
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 175 (expr)


State 348

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  177     | expr "!=" expr •
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 177 (expr)


State 349

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  172     | expr '<' expr •
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 172 (expr)


State 350

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  174     | expr '>' expr •
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 174 (expr)


State 351

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  178     | expr '+' expr •
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 178 (expr)


State 352

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  179     | expr '-' expr •
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 179 (expr)


State 353

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  181     | expr '*' expr •
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 181 (expr)


State 354

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  182     | expr '/' expr •
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 182 (expr)


State 355

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  183     | expr '%' expr •
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 183 (expr)


State 356

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  189     | expr '|' expr •
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    '&'   shift, and go to state 301

    $default  reduce using rule 189 (expr)


State 357

  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  188     | expr '&' expr •
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288

    $default  reduce using rule 188 (expr)


State 358

  146 simple_stm: "write" '(' expr ')' •

    $default  reduce using rule 146 (simple_stm)


State 359

  147 simple_stm: "writeln" '(' expr ')' •

    $default  reduce using rule 147 (simple_stm)


State 360

  110 block: • '{' varDefinitions stms '}'
  116 stm: • simple_stm ';'
  117    | • for_stm
  118    | • "if" '(' expr ')' stm
  119    | • "if" '(' expr ')' stm "else" stm
  120    | • "while" '(' expr ')' stm
  120    | "while" '(' expr ')' • stm
  121    | • "do" stm "while" '(' expr ')' ';'
  122    | • "for" '(' assignedVariable ':' expr ')' stm
  123    | • "foreach" assignedVariable "in" expr stm
  124    | • block
  125 for_stm: • "for" '(' assignedVariable ';' expr ';' expr ')' block
  126        | • "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | • "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | • "for" error ';'
  129        | • "for" error $end
  130 simple_stm: • assignedVariable ":=" expr
  131           | • assignedVariable "++"
  132           | • assignedVariable "--"
  133           | • assignedVariable "+=" expr
  134           | • assignedVariable "-=" expr
  135           | • assignedVariable "*=" expr
  136           | • assignedVariable "/=" expr
  137           | • assignedVariable "%=" expr
  138           | • assignedVariable "||=" expr
  139           | • assignedVariable "&&=" expr
  140           | • assignedVariable "&=" expr
  141           | • assignedVariable "|=" expr
  142           | • assignedVariable "<<=" expr
  143           | • assignedVariable ">>=" expr
  144           | • methodName '(' args ')'
  145           | • "readln" '(' expr ')'
  146           | • "write" '(' expr ')'
  147           | • "writeln" '(' expr ')'
  148           | • "break"
  149           | • "continue"
  150           | • "return" expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 179
    "continue"  shift, and go to state 180
    "do"        shift, and go to state 181
    "for"       shift, and go to state 182
    "foreach"   shift, and go to state 183
    "if"        shift, and go to state 184
    "readln"    shift, and go to state 185
    "return"    shift, and go to state 186
    "this"      shift, and go to state 187
    "write"     shift, and go to state 188
    "writeln"   shift, and go to state 189
    "while"     shift, and go to state 190
    IDENTIFIER  shift, and go to state 216
    '{'         shift, and go to state 145

    block             go to state 192
    stm               go to state 377
    for_stm           go to state 196
    simple_stm        go to state 197
    assignedVariable  go to state 198
    methodName        go to state 199


State 361

  113 varDefinition: IDENTIFIER ':' typeExpr ';' •

    $default  reduce using rule 113 (varDefinition)


State 362

  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  157 args: args ',' • expr
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 378


State 363

  152 assignedVariable: IDENTIFIER '[' args ']' •

    $default  reduce using rule 152 (assignedVariable)


State 364

  144 simple_stm: methodName '(' args ')' •

    $default  reduce using rule 144 (simple_stm)


State 365

   40 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 • block
  110 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 145

    block  go to state 379


State 366

   42 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 • ';'

    ';'  shift, and go to state 380


State 367

  121 stm: "do" stm "while" '(' expr • ')' ';'
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 381


State 368

  127 for_stm: "for" '(' IDENTIFIER ':' typeExpr • ';' expr ';' expr ')' block

    ';'  shift, and go to state 382


State 369

  126 for_stm: "for" '(' assignedVariable ":=" constExpr • ';' expr ';' expr ')' block

    ';'  shift, and go to state 383


State 370

  122 stm: "for" '(' assignedVariable ':' expr • ')' stm
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 384


State 371

  125 for_stm: "for" '(' assignedVariable ';' expr • ';' expr ')' block
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ';'   shift, and go to state 385


State 372

  123 stm: "foreach" assignedVariable "in" expr stm •

    $default  reduce using rule 123 (stm)


State 373

  118 stm: "if" '(' expr ')' stm •
  119    | "if" '(' expr ')' stm • "else" stm

    "else"  shift, and go to state 386

    $default  reduce using rule 118 (stm)


State 374

  157 args: args • ',' expr
  194 args_opt: args •

    ','  shift, and go to state 362

    $default  reduce using rule 194 (args_opt)


State 375

  168 expr: "new" typePtrExpr '(' args_opt • ')'

    ')'  shift, and go to state 387


State 376

  167 expr: methodName '(' args ')' •

    $default  reduce using rule 167 (expr)


State 377

  120 stm: "while" '(' expr ')' stm •

    $default  reduce using rule 120 (stm)


State 378

  157 args: args ',' expr •
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301

    $default  reduce using rule 157 (args)


State 379

   40 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block •

    $default  reduce using rule 40 (methodDefinition)


State 380

   42 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';' •

    $default  reduce using rule 42 (methodDefinition)


State 381

  121 stm: "do" stm "while" '(' expr ')' • ';'

    ';'  shift, and go to state 388


State 382

  127 for_stm: "for" '(' IDENTIFIER ':' typeExpr ';' • expr ';' expr ')' block
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 389


State 383

  126 for_stm: "for" '(' assignedVariable ":=" constExpr ';' • expr ';' expr ')' block
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 390


State 384

  110 block: • '{' varDefinitions stms '}'
  116 stm: • simple_stm ';'
  117    | • for_stm
  118    | • "if" '(' expr ')' stm
  119    | • "if" '(' expr ')' stm "else" stm
  120    | • "while" '(' expr ')' stm
  121    | • "do" stm "while" '(' expr ')' ';'
  122    | • "for" '(' assignedVariable ':' expr ')' stm
  122    | "for" '(' assignedVariable ':' expr ')' • stm
  123    | • "foreach" assignedVariable "in" expr stm
  124    | • block
  125 for_stm: • "for" '(' assignedVariable ';' expr ';' expr ')' block
  126        | • "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | • "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | • "for" error ';'
  129        | • "for" error $end
  130 simple_stm: • assignedVariable ":=" expr
  131           | • assignedVariable "++"
  132           | • assignedVariable "--"
  133           | • assignedVariable "+=" expr
  134           | • assignedVariable "-=" expr
  135           | • assignedVariable "*=" expr
  136           | • assignedVariable "/=" expr
  137           | • assignedVariable "%=" expr
  138           | • assignedVariable "||=" expr
  139           | • assignedVariable "&&=" expr
  140           | • assignedVariable "&=" expr
  141           | • assignedVariable "|=" expr
  142           | • assignedVariable "<<=" expr
  143           | • assignedVariable ">>=" expr
  144           | • methodName '(' args ')'
  145           | • "readln" '(' expr ')'
  146           | • "write" '(' expr ')'
  147           | • "writeln" '(' expr ')'
  148           | • "break"
  149           | • "continue"
  150           | • "return" expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 179
    "continue"  shift, and go to state 180
    "do"        shift, and go to state 181
    "for"       shift, and go to state 182
    "foreach"   shift, and go to state 183
    "if"        shift, and go to state 184
    "readln"    shift, and go to state 185
    "return"    shift, and go to state 186
    "this"      shift, and go to state 187
    "write"     shift, and go to state 188
    "writeln"   shift, and go to state 189
    "while"     shift, and go to state 190
    IDENTIFIER  shift, and go to state 216
    '{'         shift, and go to state 145

    block             go to state 192
    stm               go to state 391
    for_stm           go to state 196
    simple_stm        go to state 197
    assignedVariable  go to state 198
    methodName        go to state 199


State 385

  125 for_stm: "for" '(' assignedVariable ';' expr ';' • expr ')' block
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 392


State 386

  110 block: • '{' varDefinitions stms '}'
  116 stm: • simple_stm ';'
  117    | • for_stm
  118    | • "if" '(' expr ')' stm
  119    | • "if" '(' expr ')' stm "else" stm
  119    | "if" '(' expr ')' stm "else" • stm
  120    | • "while" '(' expr ')' stm
  121    | • "do" stm "while" '(' expr ')' ';'
  122    | • "for" '(' assignedVariable ':' expr ')' stm
  123    | • "foreach" assignedVariable "in" expr stm
  124    | • block
  125 for_stm: • "for" '(' assignedVariable ';' expr ';' expr ')' block
  126        | • "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block
  127        | • "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block
  128        | • "for" error ';'
  129        | • "for" error $end
  130 simple_stm: • assignedVariable ":=" expr
  131           | • assignedVariable "++"
  132           | • assignedVariable "--"
  133           | • assignedVariable "+=" expr
  134           | • assignedVariable "-=" expr
  135           | • assignedVariable "*=" expr
  136           | • assignedVariable "/=" expr
  137           | • assignedVariable "%=" expr
  138           | • assignedVariable "||=" expr
  139           | • assignedVariable "&&=" expr
  140           | • assignedVariable "&=" expr
  141           | • assignedVariable "|=" expr
  142           | • assignedVariable "<<=" expr
  143           | • assignedVariable ">>=" expr
  144           | • methodName '(' args ')'
  145           | • "readln" '(' expr ')'
  146           | • "write" '(' expr ')'
  147           | • "writeln" '(' expr ')'
  148           | • "break"
  149           | • "continue"
  150           | • "return" expr
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 179
    "continue"  shift, and go to state 180
    "do"        shift, and go to state 181
    "for"       shift, and go to state 182
    "foreach"   shift, and go to state 183
    "if"        shift, and go to state 184
    "readln"    shift, and go to state 185
    "return"    shift, and go to state 186
    "this"      shift, and go to state 187
    "write"     shift, and go to state 188
    "writeln"   shift, and go to state 189
    "while"     shift, and go to state 190
    IDENTIFIER  shift, and go to state 216
    '{'         shift, and go to state 145

    block             go to state 192
    stm               go to state 393
    for_stm           go to state 196
    simple_stm        go to state 197
    assignedVariable  go to state 198
    methodName        go to state 199


State 387

  168 expr: "new" typePtrExpr '(' args_opt ')' •

    $default  reduce using rule 168 (expr)


State 388

  121 stm: "do" stm "while" '(' expr ')' ';' •

    $default  reduce using rule 121 (stm)


State 389

  127 for_stm: "for" '(' IDENTIFIER ':' typeExpr ';' expr • ';' expr ')' block
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ';'   shift, and go to state 394


State 390

  126 for_stm: "for" '(' assignedVariable ":=" constExpr ';' expr • ';' expr ')' block
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ';'   shift, and go to state 395


State 391

  122 stm: "for" '(' assignedVariable ':' expr ')' stm •

    $default  reduce using rule 122 (stm)


State 392

  125 for_stm: "for" '(' assignedVariable ';' expr ';' expr • ')' block
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 396


State 393

  119 stm: "if" '(' expr ')' stm "else" stm •

    $default  reduce using rule 119 (stm)


State 394

  127 for_stm: "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' • expr ')' block
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 397


State 395

  126 for_stm: "for" '(' assignedVariable ":=" constExpr ';' expr ';' • expr ')' block
  151 assignedVariable: • IDENTIFIER
  152                 | • IDENTIFIER '[' args ']'
  153                 | • assignedVariable '.' IDENTIFIER
  154                 | • "this"
  155 methodName: • IDENTIFIER
  156           | • assignedVariable '.' IDENTIFIER
  159 constExpr: • "null"
  160          | • NUMBER_INTEGER
  161          | • NUMBER_FLOAT
  162          | • LITTERAL_CHAR
  163          | • LITTERAL_STRING
  164          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  165 expr: • constExpr
  166     | • assignedVariable
  167     | • methodName '(' args ')'
  168     | • "new" typePtrExpr '(' args_opt ')'
  169     | • expr "&&" expr
  170     | • expr "||" expr
  171     | • '!' expr
  172     | • expr '<' expr
  173     | • expr "<=" expr
  174     | • expr '>' expr
  175     | • expr ">=" expr
  176     | • expr "==" expr
  177     | • expr "!=" expr
  178     | • expr '+' expr
  179     | • expr '-' expr
  180     | • '-' expr
  181     | • expr '*' expr
  182     | • expr '/' expr
  183     | • expr '%' expr
  184     | • expr "++"
  185     | • expr "--"
  186     | • "++" expr
  187     | • "--" expr
  188     | • expr '&' expr
  189     | • expr '|' expr
  190     | • expr "<<" expr
  191     | • expr ">>" expr
  192     | • '(' expr ')'

    "++"             shift, and go to state 224
    "--"             shift, and go to state 225
    "new"            shift, and go to state 226
    "null"           shift, and go to state 110
    "this"           shift, and go to state 187
    IDENTIFIER       shift, and go to state 216
    LITTERAL_STRING  shift, and go to state 111
    NUMBER_INTEGER   shift, and go to state 112
    LITTERAL_CHAR    shift, and go to state 113
    NUMBER_FLOAT     shift, and go to state 114
    '!'              shift, and go to state 227
    '-'              shift, and go to state 228
    '('              shift, and go to state 229
    '['              shift, and go to state 115

    assignedVariable  go to state 230
    methodName        go to state 231
    constExpr         go to state 232
    expr              go to state 398


State 396

  110 block: • '{' varDefinitions stms '}'
  125 for_stm: "for" '(' assignedVariable ';' expr ';' expr ')' • block

    '{'  shift, and go to state 145

    block  go to state 399


State 397

  127 for_stm: "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr • ')' block
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 400


State 398

  126 for_stm: "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr • ')' block
  169 expr: expr • "&&" expr
  170     | expr • "||" expr
  172     | expr • '<' expr
  173     | expr • "<=" expr
  174     | expr • '>' expr
  175     | expr • ">=" expr
  176     | expr • "==" expr
  177     | expr • "!=" expr
  178     | expr • '+' expr
  179     | expr • '-' expr
  181     | expr • '*' expr
  182     | expr • '/' expr
  183     | expr • '%' expr
  184     | expr • "++"
  185     | expr • "--"
  188     | expr • '&' expr
  189     | expr • '|' expr
  190     | expr • "<<" expr
  191     | expr • ">>" expr

    "++"  shift, and go to state 283
    "--"  shift, and go to state 284
    "&&"  shift, and go to state 285
    "||"  shift, and go to state 286
    "<<"  shift, and go to state 287
    ">>"  shift, and go to state 288
    "=="  shift, and go to state 289
    "<="  shift, and go to state 290
    ">="  shift, and go to state 291
    "!="  shift, and go to state 292
    '<'   shift, and go to state 293
    '>'   shift, and go to state 294
    '+'   shift, and go to state 295
    '-'   shift, and go to state 296
    '*'   shift, and go to state 297
    '/'   shift, and go to state 298
    '%'   shift, and go to state 299
    '|'   shift, and go to state 300
    '&'   shift, and go to state 301
    ')'   shift, and go to state 401


State 399

  125 for_stm: "for" '(' assignedVariable ';' expr ';' expr ')' block •

    $default  reduce using rule 125 (for_stm)


State 400

  110 block: • '{' varDefinitions stms '}'
  127 for_stm: "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' • block

    '{'  shift, and go to state 145

    block  go to state 402


State 401

  110 block: • '{' varDefinitions stms '}'
  126 for_stm: "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' • block

    '{'  shift, and go to state 145

    block  go to state 403


State 402

  127 for_stm: "for" '(' IDENTIFIER ':' typeExpr ';' expr ';' expr ')' block •

    $default  reduce using rule 127 (for_stm)


State 403

  126 for_stm: "for" '(' assignedVariable ":=" constExpr ';' expr ';' expr ')' block •

    $default  reduce using rule 126 (for_stm)
